:root {
  --typo-spacing: 1.5rem;
  --typo-inline-spacing: 1.5rem;
  --typo-border-color: #ccc;
}

.typography * {
  margin: 0;
  box-sizing: border-box;
}
.typography :where(hr) {
  height: 0;
  border-width: 0;
  border-top: 1px solid var(--typo-border-color);
  margin-top: var(--typo-spacing);
}
.typography :where(br):not(:where(p > *)) {
  display: none;
}
.typography :where(p, hr, figure, img, blockquote, ul, ol, pre, table, video, audio, iframe, details, div[class*=typo-]):not(:where(video[class], audio[class], :last-child, :where(figure, blockquote) :last-of-type)) {
  margin-bottom: var(--typo-spacing);
}

.typography :where(pre:has(> code)) {
  background-color: var(--typo-code-background, #2a2833);
  padding: var(--typo-code-padding, 1.5rem);
  font-size: var(--typo-code-font-size, 1rem);
  color: var(--typo-code-color, white);
  overflow-x: auto;
}

.typography :where(h1, h2, h3, h4, h5, h6) {
  margin-bottom: 1rem;
}
.typography :where(h1) {
  font-size: var(--typo-heading-size-h1, clamp(1.75rem, 5vw, 2.25rem));
}
.typography :where(h2) {
  font-size: var(--typo-heading-size-h2, clamp(1.5rem, 4.25vw, 1.875rem));
}
.typography :where(h3) {
  font-size: var(--typo-heading-size-h3, clamp(1.25rem, 3.75vw, 1.625rem));
}
.typography :where(h4) {
  font-size: var(--typo-heading-size-h4, clamp(1.125rem, 3.25vw, 1.375rem));
}
.typography :where(h5) {
  font-size: var(--typo-heading-size-h5, clamp(1rem, 2.75vw, 1.25rem));
}
.typography :where(h6) {
  font-size: var(--typo-heading-size-h6, clamp(0.875rem, 2.5vw, 1.125rem));
}

.typography :where(table) {
  border-collapse: collapse;
}
.typography :where(table tr > *) {
  padding: 0.75rem;
  border: 1px solid var(--typo-border-color);
  word-break: normal;
}
.typography :where(blockquote) {
  border-inline-start: 4px solid var(--typo-border-color);
  padding-inline-start: var(--typo-inline-spacing);
}
.typography :where(ul, ol) {
  padding-inline-start: var(--typo-inline-spacing);
}
.typography :where(ul) {
  list-style: disc;
}
.typography :where(ol) {
  list-style: decimal;
}

.typography :where(figure) {
  position: relative;
}
.typography :where(figure) :where(figcaption) {
  text-align: center;
  margin-top: 0.75rem;
  font-size: 0.875rem;
}
.typography :where(img, video, iframe) {
  display: block;
  max-width: 100%;
  height: auto;
}
.typography :where(audio) {
  width: 100%;
}
.typography :where(iframe[src*=vimeo i], iframe[src*=youtube i], video) {
  aspect-ratio: 16/9;
  width: 100%;
  height: auto;
}

.typo-align-left {
  float: inline-start;
  clear: inline-start;
  margin-inline-end: var(--typo-spacing);
}
.typo-align-right {
  float: inline-end;
  clear: inline-end;
  margin-inline-start: var(--typo-spacing);
}
.typo-align-center {
  margin-left: auto;
  margin-right: auto;
  display: grid;
  place-content: center;
}
.typo-align-full {
  width: 100%;
}

.typo-columns {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  gap: var(--typo-spacing);
}
.typo-columns > * {
  flex: 1 1 var(--typo-column-min, 200px);
  margin-bottom: 0;
}

.typo-gallery {
  display: flex;
  flex-wrap: wrap;
  gap: var(--typo-gallery-spacing, 2px);
}
.typo-gallery > * {
  flex: 1 1 var(--typo-gallery-min, 200px);
  margin-bottom: 0;
}
.typo-gallery :where(img) {
  object-fit: cover;
  width: 100%;
  height: 100%;
}
.typo-gallery :where(figcaption) {
  background: var(--typo-gallery-caption-background, linear-gradient(transparent, rgba(0, 0, 0, 0.4)));
  color: var(--typo-gallery-caption-color, white);
  padding: var(--typo-gallery-caption-padding, 0.75rem);
  position: absolute;
  inset: auto 0 0;
}

.typo-drop-cap::first-letter {
  margin-inline-end: 1em;
  initial-letter: var(--typo-initial-letter, 3);
}

.typo-spoiler {
  padding: 1rem;
  border-top: 1px solid var(--typo-border-color);
  border-bottom: 1px solid var(--typo-border-color);
}
.typo-spoiler :where(summary) {
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
}
.typo-spoiler :where(summary)::after {
  content: var(--typo-expand-text, "Expand");
}
.typo-spoiler:where([open]) > :where(summary) {
  margin-bottom: var(--typo-spacing);
}
.typo-spoiler:where([open]) > :where(summary)::after {
  content: var(--typo-collapse-text, "Collapse");
}
.typo-spoiler:where([name]:has(+ .typo-spoiler)) {
  margin-bottom: 0;
  border-bottom: 0;
}

.typo-table {
  overflow-x: auto;
}
.typo-table-fixed {
  table-layout: fixed;
  width: 100%;
}
